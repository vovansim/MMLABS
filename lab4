#!/usr/bin/env python
# coding: utf-8

# _**Simonov lab4**_

# In[39]:


import numpy as np
import matplotlib.pyplot as plt
from scipy.optimize import curve_fit
from sklearn.preprocessing import PolynomialFeatures
from sklearn.pipeline import make_pipeline
from sklearn.linear_model import Ridge


# In[51]:


x1=np.arange(1,11)
y1=[1,-20, 21, 34, 64, 56, 56 ,77, 54, -11]



plt.axis([1,10,-30,100])
plt.title('interpolation')
plt.plot(x1,y1,'ro')


X=np.vstack([x1, np.ones(len(x1))])
X=X.T
lsq=np.linalg.lstsq(X,y1,rcond=None)
a,b=lsq[0]
plt.plot(x1,a*x1+b)


def f(x1,a,b,c):
    return a*x1*x1*x1+b*x1*x1+c*x1;
(a,b,c),_=curve_fit(f,x1,y1)
plt.plot(x1,f(x1,a,b,c))

plt.show()


# In[44]:


x_m=x1[:,np.newaxis]
model=make_pipeline(PolynomialFeatures(1),Ridge())
model.fit(x_m,y1)


# In[54]:


x1_long=np.linspace(-20,77,100)[:np.newaxis]
y1-p=model.predict(x_long)
plt.plot(x1_long,y1-p)


# In[ ]:




